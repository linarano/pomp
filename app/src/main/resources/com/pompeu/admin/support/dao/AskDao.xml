<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.pompeu.admin.support.dao.AskDao">

  <resultMap type="ask" id="askMap">
    <id column="ask_no" property="no"/>
    <result column="answer_no" property="answerNo"/>
    <result column="ask_name" property="askName"/>
    <result column="ask_content" property="askContent"/>
    <result column="answer_content" property="answerContent"/>
    <result column="register_date" property="registerDate"/>
    <result column="answer_date" property="answerDate"/>
    <result column="answer_check" property="answerCheck"/>
    <result column="answer_check_name" property="answerCheckName"/>
    <result column="member_type_no" property="memberTypeNo"/>
    <result column="member_type" property="memberType"/>
    <result column="member_no" property="memberNo"/>
    <result column="name" property="memberName"/>
    <result column="email" property="memberEmail"/>
  </resultMap>
  


  <select id="countAll" resultType="int">
    select count(*) from ask
  </select>
  
  <select id="findAll" parameterType="ask" resultMap="askMap"> 
    select a.ask_no       as ask_no 
        , a.parents_ask_no    as parents_ask_no 
        , a.ask_name          as ask_name 
        , a.ask_content       as ask_content 
        , a.answer_content    as answer_content 
        , a.register_date     as register_date 
        , a.answer_date       as answer_date
        , a.answer_check      as answer_check 
        , a.member_no         as member_no 
        , a.answer_check      as answer_check 
        , m.member_type_no    as member_type_no
        , m.email             as email 
        , mt.member_type       as member_type
        
        , case when answer_check = '1' then '답변완료'
           else  '미답변' 
           end as answer_check_name
        
      from ask a
        left outer join member m
        on a.member_no = m.member_no
        left outer join member_type mt
        on m.member_type_no = mt.member_type_no
           
     where 1=1
       <if test="memberTypeNo != 3">
          and m.member_type_no = #{memberTypeNo}
      </if>

       order by ask_no desc
       LIMIT 10
        
      
  </select>
  
  <!--일반회원 1:1 문의 목록 -->
  <select id="userFindAll" resultMap="askMap" parameterType="ask">
    select a.ask_no       as ask_no 
        , a.parents_ask_no    as parents_ask_no 
        , a.ask_name          as ask_name 
        , a.ask_content       as ask_content 
        , a.answer_content    as answer_content 
        , a.register_date     as register_date 
        , a.answer_date       as answer_date
        , a.answer_check      as answer_check 
        , a.member_no         as member_no 
        , m.member_type_no    as member_type_no
        , m.email             as email 
        , mt.member_type       as member_type
        
        , case when answer_check = '1' then '답변완료'
           else  '미답변' 
           end as answer_check_name

      from ask a
        left outer join member m
        on a.member_no = m.member_no
        left outer join member_type mt
        on m.member_type_no = mt.member_type_no
  
       order by ask_no desc
       LIMIT 10
  
     
  </select>
  
  
  <!-- 1:1 문의 등록 //  -->
  <insert id="insert" parameterType="ask">
    insert into ask(member_no,name,register_date,ask_content,answer_check) 
    values(#{memberNo},#{name},#{registerDate},#{askContent},#{answerCheck})
  </insert>
  
    <insert id="userInsert" parameterType="ask">
    insert into ask(member_no,ask_name,register_date,ask_content,answer_check) 
    values(#{memberNo},#{askName},#{registerDate},#{askContent},#{answerCheck})
  </insert>

  <!--일반회원 1:1 문의상세 -->
  <select id="findByNo" resultMap="askMap" parameterType="int"> 
    select a.ask_no       as ask_no 
        , a.parents_ask_no    as parents_ask_no 
        , a.ask_name          as ask_name 
        , a.ask_content       as ask_content 
        , a.answer_content    as answer_content 
        , a.register_date     as register_date 
        , a.answer_date       as answer_date
        , a.answer_check      as answer_check 
        , a.member_no         as member_no 
        , a.answer_check      as answer_check 
        , m.member_type_no    as member_type_no
        , m.name              as name
        , m.email             as email 
        , mt.member_type       as member_type

      from ask a
        left outer join member m
        on a.member_no = m.member_no
        left outer join member_type mt
        on m.member_type_no = mt.member_type_no
    where 
      ask_no=#{no}
  </select>
  
  
  
  <!-- 1:1 문의 답변 -->
  <update id="update" parameterType="ask">
    update ask set 
      answer_content=#{answerContent},
      answer_date=#{answerDate},
      answer_check=1
    where 
      ask_no=#{no}
  </update>
  

 <!--  1:1 문의 삭제 -->
  <delete id="delete" parameterType="int">
    delete from ask
    where ask_no=#{no}
  </delete>


</mapper>


