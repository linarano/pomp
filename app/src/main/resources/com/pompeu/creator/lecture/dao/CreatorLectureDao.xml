<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.pompeu.creator.lecture.dao.CreatorLectureDao">


  <resultMap type="lecture" id="lectureMap">
    <id column="lecture_no" property="no"/>
    <result column="location_no" property="locationNo"/>
    <result column="creator_no" property="creatorNo"/>
    <result column="ex_no" property="exNo"/>
    <result column="classtitle" property="name"/>
    <result column="start_date" property="startDate"/>
    <result column="end_date" property="endDate"/>
    <result column="lecture_price" property="lecturePrice"/>
    <result column="register_date" property="registerDate"/>
    <result column="classcheck" property="status"/>
    <result column="admin_message" property="adminMessage"/>
    <result column="total_rate" property="totalRate"/>
    <result column="in_out_ex" property="inOutEx"/>
    <result column="address" property="address"/>
    
    <collection property="times" ofType="lectureTime">
      <id column="ct_no" property="no"/>
      <result column="tt_no" property="telTypeNo"/>
      <result column="tel" property="tel"/>
    </collection>
    
    <collection property="images" ofType="lectureImage">
	  <id column="ct_no" property="no"/>
	  <result column="tt_no" property="telTypeNo"/>
	  <result column="tel" property="tel"/>
    </collection>
    
  </resultMap> 

  <resultMap type="lectureTime" id="lectureTimeMap">
      <id column="lecture_time_no" property="no"/>
      <result column="lecture_no" property="lectureNo"/>
      <result column="start_time" property="startTime"/>
      <result column="end_time" property="endTime"/>
      <result column="max_member" property="maxMember"/>
      <result column="no_member" property="noMember"/>
  </resultMap>
  
  
  <resultMap type="lectureImage" id="lectureImageMap">
      <id column="lecture_image_no" property="no"/>
      <result column="lecture_no" property="lectureNo"/>
      <result column="image" property="image"/>
      <result column="random_image" property="randomImage"/>
  </resultMap>

  <insert id="insert" parameterType="lecture" keyProperty="no" keyColumn="lecture_no" useGeneratedKeys="true" >
    insert into lecture (
    location_no,
    creator_no,
    ex_no,
    name,
    start_date,
    end_date,
    lecture_price,
    lecture_info,
    in_out_ex)
    
   values(#{locationNo},#{creatorNo},#{exNo},#{name},#{startDate},
   #{endDate},#{lecturePrice},#{lectureInfo},#{inOutEx})
  </insert>
    
    
        <insert id="insertTimes">
    insert into lecture_time(lecture_no, start_time, end_time, max_member, no_member)
    values
    <foreach collection="times" item="lectureTime" separator=",">
      (#{lectureNo}, #{lectureTime.startTime}, #{lectureTime.endTime}, #{lectureTime.maxMember}, #{lectureTime.noMember}) 
    </foreach>
  </insert>
  
    <insert id="insertImages">
      insert into lecture_image ( lecture_no, image, random_image)
        values
    <foreach collection="images" item="lectureImage" separator=",">
        values (#{lectureNo},#{images},#{random_image})
    </foreach>
  </insert>
  
    

  <select id="countAll" resultType="int">
    select count(*) from lecture
  </select>


<!-- 강좌목록 , 강좌이미지, 강좌시간 출력-->
  <select id="findAll" resultMap="lectureMap">
    select 
      le.lecture_no,
      le.name as classtitle,
      le.start_date,
      le.end_date,
      le.status,
      le.status as classcheck,
      t.start_time,
      t.end_time,
      t.max_member,
      t.no_member
    from
	  lecture le
	  join lecture_time t on le.lecture_no=t.lecture_no
  </select>
 
  <select id="findByNo" resultMap="lectureMap" parameterType="int">
    select
      lecture_no,
      creator_no,
      ex_no,
      name,
      start_date,
      end_date,
      lecture_price,
      lecture_info,
      register_date,

      status,
      admin_message,
      total_rate,
      in_out_ex
    from
      lecture
    where
      lecture_no=#{no}
  </select>

  <update id="update" parameterType="lecture">
    update lecture set
     location_no=#{no},
     ex_no=#{exNo},
     name=#{name},
     start_date=#{startDate},
     end_date=#{endDate},
     lecture_price=#{lecturePrice},
     lecture_info=#{lectureInfo},
     in_out_ex=#{inOutEx}
      where
       lecture_no=#{no};
  </update>

  <update id="delete" parameterType="int">
    delete from lecture
    where
     lecture_no=#{no}
  </update>

  

</mapper>
